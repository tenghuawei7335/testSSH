<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <mvc:annotation-driven/>
    <mvc:default-servlet-handler/>
    <context:annotation-config/>
    <!--  =====================自动扫描后端控制器并注入为Bean========================== -->
<!--    扫描所有的controller 但是不扫描service-->
    <context:component-scan base-package="com.company.project" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <!--  =============================================================================================== -->
    <!--    springmvc里提供了多个视图解析器，最常用的视图解析器：InternalResourceViewResolver-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="20"></property>
    </bean>
    <!--  =============================================================================================== -->
    <!-- 配置BeanNameViewResolver 解析器： 使用Controller返回的视图名来解析视图 -->
    <!-- 通过order 属性 来定义视图解析器的 优先级， order越小 优先级 越高；-->
    <!-- order和value的值是与其他视图解析器区分优先级 ，优先级 最大order=0-->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
        <property name="order" value="10"></property>
    </bean>
    <!--定义内部资源试图对象-->
    <bean id="indexContent" class="org.springframework.web.servlet.view.JstlView">
    <property name="url" value="/index.jsp"/>
</bean>
    <bean id="allStudent" class="org.springframework.web.servlet.view.JstlView">
        <property name="url" value="/WEB-INF/pages/studentOne.jsp"/>
    </bean>
<!--    定义外部资源视图对象-->
    <bean id="jd" class="org.springframework.web.servlet.view.RedirectView">
        <property name="url" value="https://www.jd.com"/>
    </bean>
    <bean id="baidu" class="org.springframework.web.servlet.view.RedirectView">
        <property name="url" value="https://www.baidu.com"/>
    </bean>

    <!-- 配置文件上传的解析器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!-- Interceptor拦截器测试,谁放前面谁就先执行！-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- 对/test/getList进行拦截 -->
            <mvc:mapping path="/test/getName"/>
            <!-- 特定请求的拦截器只能有一个 -->
            <bean id="testInterceptor1" class="com.company.project.controller.interceptor.TestInterceptor1"/>
        </mvc:interceptor>
        <!-- 公共拦截器对所有请求都拦截，可以有多个 -->
        <bean id="baeInterceptor1" class="com.company.project.controller.interceptor.BaeInterceptor1"/>
    </mvc:interceptors>




    <!--避免ajax请求出现406错误-->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="false"/>
        <property name="favorParameter" value="false"/>
        <property name="ignoreAcceptHeader" value="false"/>
        <property name="mediaTypes">
            <value>
                atom = application/atom+xml
                html = text/html
                json = application/json
                * = */*
            </value>
        </property>
    </bean>

    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" >
    <mvc:message-converters register-defaults="true">
        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
            <property name="supportedMediaTypes">
                <list><value>text/html;charset=UTF-8</value></list>
            </property>
        </bean>
    </mvc:message-converters>

    </mvc:annotation-driven>
</beans>